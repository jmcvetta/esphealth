#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                              ESP Configuration
#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


[ General ]
# Django built-in DEBUG option -- does NOT control logging level.  Always set
# this to False when running a production server.
django_debug = boolean(default=False)
site_name = string(min=1, default='Your Site Name')
# ESP must have read/write permissions on data folder
data_folder = string(min=1, default='/srv/esp-data/')
# Admins are emailed when there is an error
admins = string_list(min=1, default=list('your_email@your_host.com', 'another_email@your_host.com'))
# Managers are emailed a copy of the daily status report, if it is enabled in the Batch section
managers = string_list(min=1, default=list('your_email@your_host.com', 'another_email@your_host.com'))
time_zone = string(default='America/New_York')
language_code = string(default='en-us')
date_format = string(default='%d %b %Y')


[ Database ]
# Engine can be 'postgresql_psycopg2', 'postgresql', 'mysql', 'sqlite3', or 'ado_mssql'
engine = option('postgresql_psycopg2', 'postgresql', 'mysql', 'sqlite3', 'ado_mssql', default='postgresql_psycopg2')
db_name = string(min=1, default='your_db_name')
username = string(min=1, default='your_db_username')
host = string(min=1, default='localhost')
# PostgreSQL uses port 5432.  If you use a different DB engine, you will need to change this setting
port = integer(default='5432')


[ Batch ]
# Should we use built-in ETL function?
etl = boolean(default=False)
mail_status_report = boolean(default=True)
generate_case_report = boolean(default=True)
transmit_case_report = boolean(default=False)


[ Web ]
# Number of rows to display in a table
rows_per_page = integer(default=25)
# URL that handles the media served from MEDIA_ROOT. Make sure to use a
# trailing slash if there is a path component (optional in other cases).
# Examples: "http://media.lawrence.com", "http://example.com/media/"
media_url = string(default='/media')
# URL prefix for admin media -- CSS, JavaScript and images. Make sure to use a
# trailing slash.
admin_media_prefix = string(default='/admin-media/')


[ ETL ]
# What kind of files are we loading?  Valid options are 'epic' and 'hl7'.
source = option('epic', 'hl7', default='epic')
# Should we fetch ETL files from FTP?
retrieve_files = boolean(default=False)
# Should files be put in archive folder after processing?
archive = boolean(default=False)
# Login details your FTP server to fetch ETL files
server = string(default='your_etl_server')
username = string(default='your_username')
path = string(default='/path/on/ftp/server')


[ Reporting ]
# Produce case reports in special MDPH dialect of HL7?
use_mdph_format = boolean(default=False) 
# Template to use when generating (non-MDPH) case reports
template = string(default='odh_hl7.txt')
filename_format = string(default='%(timestamp)s-%(serial_number)s.hl7')
# Maximum number of cases to report per message.  If there are more cases, the
# set will be split into several messages.  A value of 0 reports all cases in a
# single message.
cases_per_message = integer(default=20)
# How should case reports be transmitted?  Supported values are 'ftp' and
# 'atrius', where 'atrius' indicates a use of an Atrius-specific upload method.
# More transports will be added in a future release.
transport = option('ftp', 'atrius', default='ftp')
# Some EMR systems, for instance Atrius Healthcare, include "fake" patients -- 
# test entries referring to fictional patients and events.  The variables below
# allow you to filter "fake" patients out of case reports (generated by 
# "case_report" command).  Any patient whose surname or MRN match the corresponding
# regex will be excluded.  The regular expression dialect to be used is that of the 
# underlying database platform.  
fake_patient_surname = string(default='')
fake_patient_mrn = string(default='')
# Login details for FTP server to which reports will b sent
upload_server = string(default='your_upload_server')
upload_username = string(default='your_upload_username')
upload_path = string(default='your_upload_path')


[ Email ]
host = string(default='localhost')
port = integer(default=25)
username = string(default='')
use_tls = boolean(default=False)
server_email = string(default='esp-no-reply@your_host.com')
default_from_email = string(default='esp-no-reply@your_host.com')
subject_prefix = string(default='[ESP] ')


[ SS ]
email_recipient = string(min=1, default='their_email@their_host.com')


[ Logging ]
# ESP must have write permission for the log file
log_file = string(default='/var/log/esp.log')
# NOTE: If you set log level to DEBUG, *copious* info will be logged!
log_level_console = option('debug', 'info', 'warning', 'error', 'critical', default='warning')
log_level_file = option('debug', 'info', 'warning', 'error', 'critical', default='warning')
log_level_syslog = option('debug', 'info', 'warning', 'error', 'critical', default='warning')
# See http://docs.python.org/library/logging.html#formatter
log_format_console = string(default='%(levelname)s:%(module)s:%(funcName)s:%(lineno)d: %(message)s')
log_format_file = string(default='%(asctime)s:%(levelname)s:%(module)s:%(funcName)s:%(lineno)d: %(message)s')
log_format_syslog = string(default='ESP:%(levelname)s:%(module)s:%(funcName)s:%(lineno)d: %(message)s')
