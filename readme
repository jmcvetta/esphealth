This is code for the ESP project
 
preLoader contains a whole bunch of stuff needed in tables for the case finder and for 
other aspects of configuration

ESP contains the main Django codebase

axis-1_4 contains patches needed for apache axis to work as the transport for connecting 
to the MA DPH Electronic Laboratory Reporting System and is probably irrelevant unless 
that's who you're sending messages to

util contains HL7 messaging, incoming data loaders and case identification logic.

You can snarf the source if you wish, but be warned that documentation is lamentably weak and the testing setup is far from ready. I'll add input 
file specs and some other odds and ends in the near future as time permits. Plan is to provide a startup.py to create and load all tables with 
ICD9/NDC/CPT codes and to generate a bucketload of fake cases for testing. The case detection logic and a lot of stuff related to our specific 
messaging and hl7 formatting which is fugly but appears to work, in the utils directory. The case management app is a standard Django app in the 
/ESP directory.

The server just has a bunch of cron jobs and the django case management application running (apache/fastcgi) - everything is locked down inside 
the HVMA firewall. I have to go over there to get at the server although it calls home to update source and return logs for inspection..
Current state of play is that we have processed 4 months of HVMA data in testing. Takes a few minutes per day to cope with all records from 300k 
patients. MySQL myisam is more than adequate. The data loading from flat files (about 10-15MB/day including demography, providers, Rx, Lx, Dx and 
immunizations) takes the longest time - the actual case finding logic for chlamydia, gonorrhea and PID take a few seconds each day since the 
searches are all indexed nicely. 